x-customizable-image: &customizable_image
  build:
    context: .
    dockerfile: images/custom/Containerfile
    args:
      FRAPPE_PATH: https://github.com/frappe/frappe
      FRAPPE_BRANCH: version-15
      APPS_JSON_BASE64: ${APPS_JSON_BASE64}
  image: ${CUSTOM_IMAGE:-ghcr.io/luisleadnro9673/erpnext-custom}:${CUSTOM_TAG:-1.0.0}
  pull_policy: ${PULL_POLICY:-always}
  restart: ${RESTART_POLICY:-unless-stopped}

x-depends-on-configurator: &depends_on_configurator
  depends_on:
    configurator:
      condition: service_completed_successfully

x-backend-defaults: &backend_defaults
  <<: [*depends_on_configurator, *customizable_image]
  volumes:
    - sites:/home/frappe/frappe-bench/sites

services:
  configurator:
    <<: *backend_defaults
    platform: linux/amd64
    entrypoint: ["bash", "-c"]
    command: >
      ls -1 apps > sites/apps.txt &&
      bench set-config -g db_host $${DB_HOST} &&
      bench set-config -gp db_port $${DB_PORT} &&
      bench set-config -g redis_cache "redis://$${REDIS_CACHE}" &&
      bench set-config -g redis_queue "redis://$${REDIS_QUEUE}" &&
      bench set-config -g redis_socketio "redis://$${REDIS_QUEUE}" &&
      bench set-config -gp socketio_port $${SOCKETIO_PORT}
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      REDIS_CACHE: ${REDIS_CACHE:-redis-cache:6379}
      REDIS_QUEUE: ${REDIS_QUEUE:-redis-queue:6379}
      SOCKETIO_PORT: 9000
    depends_on: {}
    restart: on-failure

  create-site:
    <<: *customizable_image
    deploy:
      mode: replicated
      replicas: ${CREATE_SITE:-1}
      restart_policy:
        condition: none
    entrypoint: ["bash", "-c"]
    command: >
      bench new-site ${SITE_NAME}
      --admin-password $${ADMIN_PASSWORD}
      --db-root-password $${DB_ROOT_PASSWORD}
    environment:
      SITE_NAME: ${SITE_NAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      INSTALL_APP_ARGS: ${INSTALL_APP_ARGS:-}
    volumes:
      - sites:/home/frappe/frappe-bench/sites

  migration:
    <<: *customizable_image
    deploy:
      mode: replicated
      replicas: ${MIGRATE:-1}
      restart_policy:
        condition: none
    entrypoint: ["bash", "-c"]
    command: >
      bench --site all set-config -p maintenance_mode 1 &&
      bench --site all migrate &&
      bench --site all set-config -p maintenance_mode 0
    volumes:
      - sites:/home/frappe/frappe-bench/sites

  backend:
    <<: *backend_defaults
    platform: linux/amd64
    depends_on:
      create-site:
        condition: service_completed_successfully
      migration:
        condition: service_completed_successfully
    environment:
      REDIS_CACHE: ${REDIS_CACHE:-redis-cache:6379}
      REDIS_QUEUE: ${REDIS_QUEUE:-redis-queue:6379}

  frontend:
    <<: *customizable_image
    platform: linux/amd64
    depends_on:
      - backend
      - websocket
    command: ["nginx-entrypoint.sh"]
    environment:
      BACKEND: backend:8000
      SOCKETIO: websocket:9000
      FRAPPE_SITE_NAME_HEADER: ${FRAPPE_SITE_NAME_HEADER:-admin.allvende.shop}
      UPSTREAM_REAL_IP_ADDRESS: ${UPSTREAM_REAL_IP_ADDRESS:-127.0.0.1}
      UPSTREAM_REAL_IP_HEADER: ${UPSTREAM_REAL_IP_HEADER:-X-Forwarded-For}
      UPSTREAM_REAL_IP_RECURSIVE: ${UPSTREAM_REAL_IP_RECURSIVE:-off}
      PROXY_READ_TIMEOUT: ${PROXY_READ_TIMEOUT:-120}
      CLIENT_MAX_BODY_SIZE: ${CLIENT_MAX_BODY_SIZE:-50m}
    volumes:
      - sites:/home/frappe/frappe-bench/sites

  websocket:
    <<: [*depends_on_configurator, *customizable_image]
    platform: linux/amd64
    depends_on:
      redis-socketio:
        condition: service_healthy
    command: ["node", "/home/frappe/frappe-bench/apps/frappe/socketio.js"]
    environment:
      REDIS_CACHE: ${REDIS_CACHE:-redis-cache:6379}
      REDIS_QUEUE: ${REDIS_QUEUE:-redis-queue:6379}
      REDIS_SOCKETIO: ${REDIS_SOCKETIO:-redis-socketio:6379}
    volumes:
      - sites:/home/frappe/frappe-bench/sites

  queue-short:
    <<: *backend_defaults
    platform: linux/amd64
    command: ["bench", "worker", "--queue", "short,default"]
    environment:
      REDIS_QUEUE: ${REDIS_QUEUE:-redis-queue:6379}

  queue-long:
    <<: *backend_defaults
    platform: linux/amd64
    command: ["bench", "worker", "--queue", "long,default,short"]
    environment:
      REDIS_QUEUE: ${REDIS_QUEUE:-redis-queue:6379}

  scheduler:
    <<: *backend_defaults
    platform: linux/amd64
    command: ["bench", "schedule"]
    environment:
      REDIS_QUEUE: ${REDIS_QUEUE:-redis-queue:6379}

volumes:
  sites:
